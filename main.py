import copy

# 0
# 00
it31 = {'id': '1', 'num': 3, 'pattern': [((0, -1), (1, 0)), ((1, 0), (0, 1)), ((0, 1), (-1, 0)), ((-1, 0), (0, -1))]}

# 00
# 00
it41 = {'id': '2', 'num': 4, 'pattern': [((1, 0), (1, 1), (0, 1))]}

# 0000
it42 = {'id': '3', 'num': 4, 'pattern': [((0, 1), (0, 2), (0, 3)), ((1, 0), (2, 0), (3, 0))]}

# 0
# 000
it43 = {'id': '4', 'num': 4, 'pattern': [((0, -1), (1, 0), (2, 0)), ((0, 1), (1, 0), (2, 0)),
                                         ((1, 0), (0, 1), (0, 2)), ((-1, 0), (0, 1), (0, 2)),
                                         ((0, 1), (-1, 0), (-2, 0)), ((0, -1), (-1, 0), (-2, 0)),
                                         ((-1, 0), (0, -1), (0, -2)), ((1, 0), (0, -1), (0, -2))]}
#  0
# 000
#  0
it51 = {'id': '5', 'num': 5, 'pattern': [((0, -1), (1, 0), (0, 1), (-1, 0))]}

# 00
# 000
it52 = {'id': '6', 'num': 5, 'pattern': [((0, -1), (1, 0), (1, 1), (0, 1)), ((0, -1), (1, 0), (1, -1), (0, 1)),
                                         ((1, 0), (0, 1), (-1, 1), (-1, 0)), ((1, 0), (0, 1), (1, 1), (-1, 0)),
                                         ((0, 1), (-1, 0), (-1, -1), (0, -1)), ((0, 1), (-1, 0), (-1, 1), (0, -1)),
                                         ((-1, 0), (0, -1), (1, -1), (1, 0)), ((-1, 0), (0, -1), (-1, -1), (1, 0))]}

# 0
# 0000
it53 = {'id': '7', 'num': 5, 'pattern': [((0, -1), (1, 0), (2, 0), (3, 0)), ((0, 1), (1, 0), (2, 0), (3, 0)),
                                         ((1, 0), (0, 1), (0, 2), (0, 3)), ((-1, 0), (0, 1), (0, 2), (0, 3)),
                                         ((0, 1), (-1, 0), (-2, 0), (-3, 0)), ((0, -1), (-1, 0), (-2, 0), (-3, 0)),
                                         ((-1, 0), (0, -1), (0, -2), (0, -3)), ((1, 0), (0, -1), (0, -2), (0, -3))]}
# 0
# 0
# 000
it54 = {'id': '8', 'num': 5, 'pattern': [((0, -1), (0, -2), (1, 0), (2, 0)), ((1, 0), (2, 0), (0, 1), (0, 2)),
                                         ((0, 1), (0, 2), (-1, 0), (-2, 0)), ((-1, 0), (-2, 0), (0, -1), (0, -2))]}

# 00
# 0
# 00
it55 = {'id': '9', 'num': 5, 'pattern': [((0, -1), (1, -1), (0, 1), (1, 1)), ((0, -1), (-1, -1), (0, 1), (-1, 1)),
                                         ((1, 0), (1, 1), (-1, 0), (-1, 1)), ((1, 0), (1, -1), (-1, 0), (-1, -1))]}

#  0
# 0000
it56 = {'id': 'A', 'num': 5, 'pattern': [((0, -1), (1, 0), (2, 0), (-1, 0)), ((0, 1), (1, 0), (2, 0), (-1, 0)),
                                         ((1, 0), (0, 1), (0, 2), (0, -1)), ((-1, 0), (0, 1), (0, 2), (0, -1)),
                                         ((0, 1), (-1, 0), (-2, 0), (1, 0)), ((0, -1), (-1, 0), (-2, 0), (1, 0)),
                                         ((-1, 0), (0, -1), (0, -2), (0, 1)), ((1, 0), (0, -1), (0, -2), (0, 1))]}

# 00
#  000
it57 = {'id': 'B', 'num': 5, 'pattern': [((0, -1), (1, 0), (2, 0), (-1, -1)), ((0, 1), (1, 0), (2, 0), (-1, 1)),
                                         ((1, 0), (0, 1), (0, 2), (1, -1)), ((-1, 0), (0, 1), (0, 2), (-1, -1)),
                                         ((0, 1), (-1, 0), (-2, 0), (1, 1)), ((0, -1), (-1, 0), (-2, 0), (1, -1)),
                                         ((-1, 0), (0, -1), (0, -2), (-1, 1)), ((1, 0), (0, -1), (0, -2), (1, 1))]}

# 00
#  00
#   0
it58 = {'id': 'C', 'num': 5, 'pattern': [((0, -1), (-1, -1), (1, 0), (1, -1)), ((0, 1), (-1, 1), (1, 0), (1, -1)),
                                         ((-1, 0), (-1, -1), (0, 1), (1, 1)), ((-1, 0), (-1, 1), (0, -1), (1, -1))]}

components = [it31, it41, it42, it43, it51, it52, it53, it54, it55, it56, it57, it58]

O = '0'
X = 'X'
# use_mark = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

tmap = [
    [O],
    [O, O],
    [O, O, O],
    [O, O, O, O],
    [X, X, X, X, X],
    [X, X, X, X, X, X],
    [X, X, X, X, X, X, X],
    [X, X, X, X, X, X, X, X],
    [X, X, X, X, X, X, X, X, X],
    [X, X, X, X, X, X, X, X, X, X]
]
use_mark = (1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1)

unused = [components[i] for i, m in enumerate(use_mark) if m == 0]
cnt = use_mark.count(0)


def printmap(pmap):
    for row in pmap:
        print(row)


def dfs(mp, cp):
    for i, row in enumerate(mp):
        for j, m in enumerate(row):
            if mp[i][j] != O:
                continue
            for pt in unused[cp]['pattern']:
                tmp = copy.deepcopy(mp)
                done = 1
                for dot in pt:
                    x = j + dot[0]
                    y = i + dot[1]
                    try:
                        if y < 0 or y >= 10 or x < 0 or x >= len(mp[y]) or tmp[y][x] != O:
                            done = 0
                            break
                    except Exception as e:
                        print(e)
                        print(i, j)
                        print(cp)
                        # print('id: ',unused[cp]['id'])
                        print(unused[cp])
                        print('pt: ', pt)
                        print('dot: ', dot)
                        print(x, y)

                        exit(1)
                    tmp[y][x] = unused[cp]['id']
                if not done:
                    continue
                tmp[i][j] = unused[cp]['id']
                if cp + 1 >= cnt:
                    print()
                    printmap(tmp)
                    print()
                    return
                dfs(tmp, cp + 1)


if __name__ == '__main__':
    # 527
    # tmap = [
    #     [O],
    #     [O, O],
    #     [O, O, O],
    #     [O, O, O, O],
    #     [O, O, O, O, O],
    #     [O, O, O, O, O, X],
    #     [O, O, O, O, O, X, X],
    #     [O, O, O, O, O, X, X, X],
    #     [X, O, O, O, O, X, X, X, X],
    #     [X, X, X, X, X, X, X, X, X, X]
    # ]
    # use_mark = (1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0)

    # 469
    # tmap = [
    #     [O],
    #     [O, O],
    #     [O, O, O],
    #     [O, O, O, O],
    #     [O, O, O, O, O],
    #     [O, O, O, O, O, O],
    #     [X, X, O, O, O, O, X],
    #     [X, X, X, O, O, O, X, X],
    #     [X, X, X, X, O, X, X, X, X],
    #     [X, X, X, X, X, X, X, X, X, X]
    # ]
    # use_mark = (1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1)

    # 588
    tmap = [
        [O],
        [O, O],
        [O, O, O],
        [O, O, O, O],
        [X, X, X, O, O],
        [X, X, X, X, O, O],
        [X, X, X, X, O, O, O],
        [X, X, X, X, O, O, O, O],
        [X, X, X, X, O, O, O, O, O],
        [X, X, X, X, O, O, O, O, O, O]
    ]
    use_mark = (0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0)


    print('start...')
    unused = [components[i] for i, m in enumerate(use_mark) if m == 0]
    cnt = use_mark.count(0)
    dfs(tmap, 0)
    print('done')
